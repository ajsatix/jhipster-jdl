application {
  config {
    applicationType microservice
    authenticationType jwt
    baseName newsfeedservice
    buildTool maven
    cacheProvider hazelcast
    clientPackageManager yarn
    databaseType sql
    devDatabaseType h2Disk
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation false
    jhiPrefix jhi
    jhipsterVersion "5.2.1"
    jwtSecretKey "76742c0e84c18c45546862f884b7b259ec0095de"
    languages [en, fr]
    messageBroker kafka
    nativeLanguage en
    packageName com.kloudlearn.newsfeed
    prodDatabaseType mysql
    searchEngine false
    serverPort 8081
    serviceDiscoveryType eureka
    skipClient true
    skipUserManagement true
    testFrameworks [gatling]
    websocket false
  }

  entities Post, Reply, Star
}

entity Post {
  userId Long required,
  groupId Long,
  pinned Boolean,
  text TextBlob,
  weblinkPresent Boolean,
  weblinkDataJson AnyBlob,
  attachmentType PostAttachment,
  privacy PostPrivacy,
  attachmentId Long,
  flaggedByAdmin Boolean,
  createdAt ZonedDateTime,
  updatedAt ZonedDateTime
}
entity Reply {
  userId Long required,
  pinned Boolean,
  text String,
  weblinkPresent Boolean,
  weblinkDataJson AnyBlob,
  attachmentType ReplyAttachment,
  attachmentId Long,
  privacy ReplyPrivacy,
  flaggedByAdmin Boolean,
  createdAt ZonedDateTime,
  updatedAt ZonedDateTime
}
entity Star {
  userId Long required,
  createdAt ZonedDateTime
}
enum PostAttachment {
  ASSET,
  COURSE,
  WEBLINK
}
enum PostPrivacy {
  PRIVATE,
  PUBLIC,
  GROUP,
  ORGANIZATION
}
enum ReplyAttachment {
  ASSET,
  COURSE,
  WEBLINK
}
enum ReplyPrivacy {
  PRIVATE,
  PUBLIC,
  GROUP,
  ORGANIZATION
}

relationship OneToMany {
  Post{reply} to Reply{repliedPost},
  Post{star} to Star{starredPost}
}

dto Post, Reply, Star with mapstruct
paginate Post with infinite-scroll
paginate Reply, Star with pagination
service Post, Reply, Star with serviceClass
microservice Post, Reply, Star with newsfeedservice
